@{
    ViewData["Title"] = "Şifre Sıfırla";
}

<div class="container my-5" style="max-width:500px;">
    <div class="card shadow-soft p-4">
        <h4 class="mb-3 text-center">Şifreyi Sıfırla</h4>

        <form asp-action="ResetPassword" method="post">
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <label class="form-label">Mevcut Şifre</label>
                <div class="pwd-wrap">
                    <input type="password" name="oldPassword" id="oldPwd" class="form-control pwd-input" required />
                    <span id="toggleOldPwd" class="pwd-toggle-link" role="button" tabindex="0">Göster</span>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Yeni Şifre</label>
                <div class="pwd-wrap">
                    <input type="password" name="newPassword" id="newPwd" class="form-control pwd-input" required
                        minlength="8" />
                    <span id="toggleNewPwd" class="pwd-toggle-link" role="button" tabindex="0">Göster</span>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Yeni Şifre (Tekrar)</label>
                <div class="pwd-wrap">
                    <input type="password" name="confirmPassword" id="confirmPwd" class="form-control pwd-input"
                        required minlength="8" />
                    <span id="toggleConfirmPwd" class="pwd-toggle-link" role="button" tabindex="0">Göster</span>
                </div>
            </div>

            <div class="text-end mt-3">
                <a asp-controller="Profile" asp-action="Index" class="btn btn-outline-secondary me-2">Geri</a>
                <button type="submit" class="btn btn-navy">Şifreyi Güncelle</button>
            </div>
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">
                @foreach (var v in ViewData.ModelState.Values.SelectMany(x => x.Errors))
                {
                    <div>@v.ErrorMessage</div>
                }
            </div>
        }

        
    </div>
</div>

@section Scripts {
    <script>
        function setupToggle(toggleId, inputId) {
            const link = document.getElementById(toggleId);
            const input = document.getElementById(inputId);
            if (!link || !input) return;
            link.addEventListener("click", () => {
                const hidden = input.type === "password";
                input.type = hidden ? "text" : "password";
                link.textContent = hidden ? "Gizle" : "Göster";
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            setupToggle("toggleOldPwd", "oldPwd");
            setupToggle("toggleNewPwd", "newPwd");
            setupToggle("toggleConfirmPwd", "confirmPwd");
        });
    </script>

    <style>
        .pwd-wrap {
            position: relative;
        }

        .pwd-toggle-link {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #666;
            font-size: 0.9rem;
            user-select: none;
        }

        .pwd-toggle-link:hover {
            color: #000;
            text-decoration: underline;
        }
    </style>
}