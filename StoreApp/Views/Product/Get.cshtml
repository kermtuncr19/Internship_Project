@model Product
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="container py-4">

    <h1 class="display-6 text-center mb-4">@Model.ProductName</h1>

    @if (TempData["CartError"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="alert alert-warning text-center" role="alert">@err</div>
    }

    <div class="row g-4 align-items-start">
        <div class="col-lg-6 text-center">
            <img class="img-fluid rounded shadow-sm"
                 src="@Model?.ImageUrl"
                 alt="@Model?.ProductName"
                 style="max-height:560px; object-fit:contain;" />
        </div>

        <div class="col-lg-6">

            <div class="d-flex align-items-center gap-2 mb-3">
                <div class="fs-4 text-primary fw-semibold m-0">
                    @Model.Price.ToString("c")
                </div>

               @if (User.Identity?.IsAuthenticated == true)
{
    var isFavorite = ViewBag.IsFavorite ?? false;
    <form method="post"
          asp-controller="Favorites"
          asp-action="Toggle"
          class="m-0 p-0 d-inline">
        @Html.AntiForgeryToken()
        <input type="hidden" name="productId" value="@Model.ProductId" />
        <input type="hidden" name="returnUrl" value="@(Context.Request.Path + Context.Request.QueryString)" />
        <button type="submit"
                class="btn p-0 border-0 bg-transparent tooltip1-btn-favorite"
                style="line-height: 1;">
            <i class="@(isFavorite ? "fa-solid" : "fa-regular") fa-heart fa-2x" 
               style="@(isFavorite ? "color: #dc3545;" : "color: #0d1b4c;") cursor: pointer; transition: color 0.2s;"></i>
        </button>
    </form>
}
            </div>

            <form id="addToCartForm" class="mt-2" method="post" asp-page="/cart">
                @Html.AntiForgeryToken()

                <input type="hidden" asp-for="ProductId" />
                <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />

                @{
                    var sizeCsv = string.IsNullOrWhiteSpace(Model.SizeOptionsCsv)
                                  ? "XS,S,M,L,XL"
                                  : Model.SizeOptionsCsv;

                    var sizeList = sizeCsv
                        .Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries)
                        .ToList();

                    var showSizes = sizeList.Any();
                }

                @if (showSizes)
                {
                    <div class="mb-3">
                        <div class="small text-muted mb-2">Beden Seçin</div>
                        <fieldset class="size-list d-flex flex-wrap gap-2" role="radiogroup" aria-label="Beden Seçimi">
                            @foreach (var s in sizeList)
                            {
                                var id = $"size_{s}";
                                <div class="size-chip">
                                    <input type="radio" id="@id" name="size" value="@s" class="visually-hidden" />
                                    <label for="@id" class="size-btn">@s</label>
                                </div>
                            }
                        </fieldset>
                    </div>
                }

                <div class="d-flex align-items-center gap-2">
                    <button id="addToCartBtn"
                            type="submit"
                            class="btn btn-navy btn-pill px-4"
                            @(Model.RequiresSize && showSizes ? "disabled" : null)>
                        <i class="fa fa-cart-plus me-1"></i> Sepete Ekle
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@await Component.InvokeAsync("RelatedProducts", new { productId = Model.ProductId, categoryId = Model.CategoryId })


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const requires = @(Model.RequiresSize.ToString().ToLowerInvariant());
            const form = document.getElementById('addToCartForm');
            if (!form) return;

            const radios = form.querySelectorAll('input[name="size"]');
            const button = document.getElementById('addToCartBtn');

            if (!requires || radios.length === 0) return;

            function syncState() {
                const anyChecked = Array.from(radios).some(r => r.checked);
                button.disabled = !anyChecked;
            }

            radios.forEach(r => r.addEventListener('change', syncState));
            syncState();
        });
    </script>
}