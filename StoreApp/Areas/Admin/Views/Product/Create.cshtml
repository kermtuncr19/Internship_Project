@model ProductDtoForInsertion

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div class="text-center">
    <div class="display-6">Ürün Ekle</div>
</div>

<form asp-area="Admin" method="post" asp-action="Create" enctype="multipart/form-data">

    <div class="text-danger" asp-validation-summary="All"></div>

    <div class="form-group my-3">
        <label asp-for="CategoryId">Kategori Adı</label>
        <select class="form-control" asp-items="@ViewBag.Categories" asp-for="CategoryId">
        </select>
    </div>

    <div class="form-group my-3">
        <label asp-for="ProductName">Ürün Adı</label>
        <input asp-for="ProductName" class="form-control" />
    </div>

    <div class="form-group my-3">
        <label asp-for="Summary" class="form-label">Özet</label>
        <textarea asp-for="Summary" class="form-control" rows="6"
            placeholder="Her satıra bir madde yazabilirsiniz"></textarea>
        <span asp-validation-for="Summary" class="text-danger"></span>
    </div>

    <div class="form-group my-3">
        <label asp-for="Price">Ücret</label>
        <input asp-for="Price" class="form-control" />
    </div>

    <div class="form-check my-3">
        <input class="form-check-input" type="checkbox" asp-for="RequiresSize" id="RequiresSize">
        <label class="form-check-label" for="RequiresSize">Beden seçimi zorunlu</label>
    </div>

    <div class="form-group my-3">
        <label asp-for="SizeOptionsCsv" class="form-label">
            Bedenler (CSV) <span class="text-muted small">(örn: XS,S,M,L,XL)</span>
        </label>
        <input asp-for="SizeOptionsCsv" class="form-control" />
        <span class="form-text text-muted">Boş bırakırsanız varsayılan liste: XS,S,M,L,XL</span>
    </div>

    <!-- ✅ ANA FOTOĞRAF -->
    <div class="form-group my-3">
        <label class="fw-bold">Ana Fotoğraf <span class="text-danger">*</span></label>
        <input name="file" type="file" class="form-control" accept="image/*" required />
        <div class="mt-2">
  <img id="mainPreviewImg" src="#" alt="" class="d-none" style="width:160px;height:160px;object-fit:cover;border-radius:8px;">
</div>
        <span class="form-text text-muted">
            <i class="bi bi-info-circle"></i> Bu fotoğraf otomatik olarak ana fotoğraf olarak ayarlanacak
        </span>
    </div>

    <!-- ✅ EK FOTOĞRAFLAR (Gelişmiş) -->
<div class="form-group my-4">
  <label class="form-label fw-bold">Ek Fotoğraflar (İsteğe Bağlı)</label>

  <!-- Dosya seçme butonu -->
  <div class="file-upload-wrapper mb-3">
    <input name="additionalImages" type="file" class="form-control d-none" id="additionalImagesInput" accept="image/*" multiple />
    <button type="button" class="btn btn-outline-primary" id="selectAdditionalBtn">
      <i class="fa fa-images me-2"></i>Fotoğraf Seç
    </button>
    <span class="ms-2 text-muted small" id="additionalCountText">Henüz fotoğraf seçilmedi</span>
  </div>

  <!-- Seçilen fotoğrafların önizlemesi -->
  <div id="additionalPreviewContainer" class="row g-3"></div>
</div>


    <div class="form-group my-3">
        <div class="d-flex justify-content-left">
            <button class="btn btn-primary me-2" type="submit">Kaydet</button>
            <a asp-action="Index" class="btn btn-warning">Ürünler</a>
        </div>
    </div>
    <div asp-validation-summary="All"></div>
</form>

@section Scripts {
<script>
// == Ana fotoğraf (isteğe bağlı mini önizleme) ==
const mainInput = document.querySelector('input[name="file"]');
if (mainInput) {
  mainInput.addEventListener('change', () => {
    if (mainInput.files && mainInput.files[0]) {
      // Basit mini önizleme istersen:
      // document.getElementById('mainPreviewImg').src = URL.createObjectURL(mainInput.files[0]);
    }
  });
}

// == Ek fotoğraflar: seç–önizle–kaldır ==
const additionalInput = document.getElementById('additionalImagesInput');
const selectAdditionalBtn = document.getElementById('selectAdditionalBtn');
const additionalCountText = document.getElementById('additionalCountText');
const additionalPreviewContainer = document.getElementById('additionalPreviewContainer');
let additionalFiles = [];

selectAdditionalBtn.addEventListener('click', () => additionalInput.click());

additionalInput.addEventListener('change', (e) => {
  const files = Array.from(e.target.files);
  additionalFiles = [...additionalFiles, ...files];
  syncAdditionalCount();
  renderAdditionalPreviews();
  syncAdditionalInput();
});

function syncAdditionalCount() {
  if (additionalFiles.length === 0) additionalCountText.textContent = 'Henüz fotoğraf seçilmedi';
  else if (additionalFiles.length === 1) additionalCountText.textContent = '1 fotoğraf seçildi';
  else additionalCountText.textContent = `${additionalFiles.length} fotoğraf seçildi`;
}

function renderAdditionalPreviews() {
  additionalPreviewContainer.innerHTML = '';
  additionalFiles.forEach((file, index) => {
    const reader = new FileReader();
    reader.onload = (ev) => {
      const col = document.createElement('div');
      col.className = 'col-md-3';
      col.innerHTML = `
        <div class="preview-card">
          <img src="${ev.target.result}" class="preview-image" alt="Önizleme">
          <button type="button" class="remove-preview-btn" data-index="${index}">
            <i class="fa fa-times"></i>
          </button>
          <div class="text-center mt-2">
            <small class="text-muted">${file.name}</small>
          </div>
        </div>`;
      additionalPreviewContainer.appendChild(col);

      col.querySelector('.remove-preview-btn').addEventListener('click', () => {
        removeAdditional(index);
      });
    };
    reader.readAsDataURL(file);
  });
}

function removeAdditional(index) {
  additionalFiles.splice(index, 1);
  syncAdditionalCount();
  renderAdditionalPreviews();
  syncAdditionalInput();
}

function syncAdditionalInput() {
  const dt = new DataTransfer();
  additionalFiles.forEach(f => dt.items.add(f));
  additionalInput.files = dt.files;
}

// == Beden CSV girişini RequiresSize’a göre pasifleştir (UX için) ==
const reqCb = document.getElementById('RequiresSize');
const csvInput = document.querySelector('input[name="SizeOptionsCsv"]');
function toggleCsv() {
  if (!csvInput || !reqCb) return;
  csvInput.disabled = !reqCb.checked;
  csvInput.closest('.form-group')?.style && (csvInput.closest('.form-group').style.opacity = reqCb.checked ? '1' : '.6');
}
reqCb?.addEventListener('change', toggleCsv);
toggleCsv();
if (mainInput) {
  const mainPreview = document.getElementById('mainPreviewImg');
  mainInput.addEventListener('change', () => {
    if (mainInput.files && mainInput.files[0]) {
      mainPreview.src = URL.createObjectURL(mainInput.files[0]);
      mainPreview.classList.remove('d-none');
    }
  });
}
</script>
}
